<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Lior Ben-Yehoshua</title>
<generator uri="https://github.com/jekyll/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://lior9999.com//feed.xml" />
<link rel="alternate" type="text/html" href="http://lior9999.com/" />
<updated>2014-10-21T15:55:11-04:00</updated>
<id>http://lior9999.com//</id>
<author>
  <name>Lior</name>
  <uri>http://lior9999.com//</uri>
  <email>admin@lior9999.com</email>
</author>


  

<entry>
  <title type="html"><![CDATA[BoilerMake Hackathon Badge]]></title>
  <link rel="alternate" type="text/html" href="http://lior9999.com//boilermakebadge-i/" />
  <id>http://lior9999.com//boilermakebadge-i</id>
  <published>2014-10-10T17:58:14-04:00</published>
  <updated>2014-10-10T17:58:14-04:00</updated>
  <author>
    <name>Lior</name>
    <uri>http://lior9999.com/</uri>
    <email>admin@lior9999.com</email>
  </author>
  <content type="html">&lt;p&gt;Since our team for this massive project mainly consists of myself and my colleague, Thomas Kilbride, I’ve been too busy to document our progress (or sleep). Regardless, here’s at least a picture of our prototype:&lt;/p&gt;

&lt;h4 id=&quot;prototyped-badge-pcb&quot;&gt;Prototyped Badge PCB&lt;/h4&gt;

&lt;figure&gt;
	&lt;a href=&quot;/images/boilerbadgeprototype.jpeg&quot;&gt;&lt;img src=&quot;/images/boilerbadgeprototype.jpeg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;With little time to dedicate to writing some meaningful information in here, I’ll just fill the rest of this void with Lorem Ipsum so it doesn’t look so empty. Enjoy.&lt;/p&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras consectetur eros et condimentum bibendum. Nullam augue arcu, ultrices sed egestas ut, sagittis sit amet urna. Morbi et ex congue, porttitor nisl vitae, malesuada arcu. Maecenas auctor interdum maximus. Phasellus velit tellus, condimentum et condimentum molestie, maximus et ipsum. Aliquam erat volutpat. Sed ut risus ornare, rutrum nisl ut, eleifend leo. In feugiat ligula velit, a dignissim mauris blandit non. Curabitur accumsan ullamcorper dui, ut fermentum nulla posuere dictum. Vestibulum mollis felis metus, a sollicitudin augue lobortis eu. Phasellus faucibus ex eu rutrum vestibulum. Maecenas a augue ut ipsum euismod euismod id eget augue. Nulla facilisi. Aliquam semper interdum nulla non suscipit. Nam in eros at est vehicula rutrum. Donec sit amet libero eu magna elementum imperdiet.&lt;/p&gt;

&lt;p&gt;Nulla id risus vitae mauris pulvinar condimentum suscipit et elit. Vestibulum fringilla convallis ullamcorper. In dolor orci, cursus ac facilisis vel, condimentum sed risus. Cras commodo, ante at sodales laoreet, massa augue commodo diam, sed auctor felis neque et sapien. Proin in lacus ac nibh scelerisque consectetur. Cras ut eleifend tortor, eget pulvinar ex. Aenean in arcu risus. Praesent tristique felis enim, quis volutpat ipsum fringilla et. Etiam elit ex, vulputate id tortor hendrerit, lacinia mattis sem.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lior9999.com//boilermakebadge-i/&quot;&gt;BoilerMake Hackathon Badge&lt;/a&gt; was originally published by Lior at &lt;a href=&quot;http://lior9999.com/&quot;&gt;Lior Ben-Yehoshua&lt;/a&gt; on October 10, 2014.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Home BLE Mesh Network]]></title>
  <link rel="alternate" type="text/html" href="http://lior9999.com//home-ble-mesh-network/" />
  <id>http://lior9999.com//home-ble-mesh-network</id>
  <published>2014-09-25T14:17:10-04:00</published>
  <updated>2014-09-25T14:17:10-04:00</updated>
  <author>
    <name>Lior</name>
    <uri>http://lior9999.com/</uri>
    <email>admin@lior9999.com</email>
  </author>
  <content type="html">&lt;p&gt;Two weeks ago I ordered some Bluegiga BLE112 bluetooth low energy modules to play around with. There are some light fixtures around my house that I’d like to be able to control more conveniently, so I figured why not use BLE to do it. You can get the BLE112 modules over at the &lt;a href=&quot;http://www.semiconductorstore.com/cart/pc/viewPrd.asp?idproduct=46652&quot;&gt;Semiconductor Store&lt;/a&gt; for about $14 a pop. I also purchased a breakout panel from &lt;a href=&quot;http://www.inmojo.com/store/jeff-rowberg/item/ble112-bluetooth-low-energy-breakout/&quot;&gt;Jeff Rowberg’s&lt;/a&gt; online shop for $6 each (Jeff is a field applications engineer at Bluegiga). I could’ve also just used my free CC2541 samples that I got straight from TI and broken them out with a Schmart board for only about $10, but decided to go with Bluegiga because of a different reason entirely: BGScript. You’ll also need a way to flash the BLE112. I used my old &lt;a href=&quot;http://www.ti.com/tool/cc-debugger&quot;&gt;CC-Debugger&lt;/a&gt; from TI.&lt;/p&gt;

&lt;h4 id=&quot;bgscript&quot;&gt;BGScript&lt;/h4&gt;

&lt;p&gt;BGScript is a simple BASIC-style programming language that allows you to embed applications to the Bluegiga BLE modules. BGScript is a very simple and easy to learn programming language, which is partly why I chose to use it. But it also frees me from being forced to use IAR Embedded Workbench to write code from the CC2541, something that is pretty much impossible to do without having to deal with annoying evaluation licenses or forking over some serious cash. You can find all of the downloads, documentation, and a syntax highlighter for BGScript over at the Bluegiga product support page by registering for their website.&lt;/p&gt;

&lt;h4 id=&quot;ble112-modules&quot;&gt;BLE112 modules&lt;/h4&gt;

&lt;p&gt;As a word of caution, be very careful when flashing the BLE112 modules. When I initially toyed around with them I was using just a breadboard and some jumpers. This ended up bricking my module and losing the device’s serial # and MAC address. This seems to be a common occurrence, so I would recommend recording those numbers somewhere and adding a proper programming header to whatever breakout you use.&lt;/p&gt;

&lt;figure&gt;
	&lt;a href=&quot;/images/BLE112_breakoutpinout.png&quot;&gt;&lt;img src=&quot;/images/BLE112_breakoutpinout.png&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;BLE112 breakout pinout for use with the CC-Debugger.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h4 id=&quot;approach&quot;&gt;Approach&lt;/h4&gt;

&lt;p&gt;At first I just wanted to be able to control a few remote relays by using a simple iPhone app (everyone in my house owns iPhones, and I don’t particularly want to take the time to learn android app dev). Getting that to work was extremely trivial and only took about one afternoon. To make this project more interesting, I’ve decided to add some features to the system:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create a mesh network too allow data exchange between far away sensors while maintaining low power.&lt;/li&gt;
  &lt;li&gt;Use the proximity profile (RSSI) to determine where a user is within the house.&lt;/li&gt;
  &lt;li&gt;Allow each house member a specific profile that they can customize.&lt;/li&gt;
  &lt;li&gt;Manage which nodes do what based on a user’s location and specific profile.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;to-do&quot;&gt;To-Do&lt;/h4&gt;

&lt;p&gt;Recent freelance projects have forced me to delay this project by quite a bit. Hopefully I’ll be able to return to it soon. What’s left:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Finish writing a simple IOS app.&lt;/li&gt;
  &lt;li&gt;Order more BLE112 modules (need about 4 more).&lt;/li&gt;
  &lt;li&gt;Finalize mesh network protocol and code.&lt;/li&gt;
  &lt;li&gt;Tune my RSSI settings.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Will update my progress once I get some more free time.&lt;/p&gt;

&lt;h4 id=&quot;future-plans&quot;&gt;Future Plans&lt;/h4&gt;

&lt;p&gt;Although the probability of me having enough time to add more features to the network seems very unlikely, a boy can dream. Here’s what I’d like to do with the mesh network once my current to-do list is finished:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add temperature sensors to some of the nodes to map out ambient temperature.&lt;/li&gt;
  &lt;li&gt;Add more nodes to control every light via the network.&lt;/li&gt;
  &lt;li&gt;Integrate the AC system into the network.&lt;/li&gt;
&lt;/ul&gt;

  &lt;p&gt;&lt;a href=&quot;http://lior9999.com//home-ble-mesh-network/&quot;&gt;Home BLE Mesh Network&lt;/a&gt; was originally published by Lior at &lt;a href=&quot;http://lior9999.com/&quot;&gt;Lior Ben-Yehoshua&lt;/a&gt; on September 25, 2014.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[RAL - Robotic Autonomous Lawnmower]]></title>
  <link rel="alternate" type="text/html" href="http://lior9999.com//RAL/" />
  <id>http://lior9999.com//RAL</id>
  <published>2013-11-28T15:52:07-05:00</published>
  <updated>2013-11-28T15:52:07-05:00</updated>
  <author>
    <name>Lior</name>
    <uri>http://lior9999.com/</uri>
    <email>admin@lior9999.com</email>
  </author>
  <content type="html">&lt;p&gt;If there is one thing I truly despise, it is mowing my lawn. I’d much rather be spending my time doing…literally anything else. Unfortunately I have grass that needs cutting, and quite a bit of it. The solution? A robotic lawnmower, of course. So without further ado, meet RAL:&lt;/p&gt;

&lt;figure&gt;
	&lt;a href=&quot;/images/ral_pose2.jpg&quot;&gt;&lt;img src=&quot;/images/ral_pose2.jpg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;After two months of on and off work, I can safely say RAL is (nearly) finished. RAL’s components include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;12V car battery&lt;/li&gt;
  &lt;li&gt;4 CIM motors&lt;/li&gt;
  &lt;li&gt;4 speed controllers&lt;/li&gt;
  &lt;li&gt;3-axis gyro/accelerometer&lt;/li&gt;
  &lt;li&gt;2 ultrasonic range sensors&lt;/li&gt;
  &lt;li&gt;wireless PS2 controller&lt;/li&gt;
  &lt;li&gt;9S12C Freescale microcontroller + PCB&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;RAL is capable of autonomously driving straight and making 90 and 180 degree turns accurately using the on-board gyro and accelerometer. Two ultrasonic sensors located in the front of the robot allow him to navigate around large obstacles.&lt;/p&gt;

&lt;p&gt;Below are a few more pictures of RAL:&lt;/p&gt;

&lt;h4 id=&quot;microcontroller-stamp-module-pcb&quot;&gt;Microcontroller stamp module PCB&lt;/h4&gt;

&lt;figure&gt;
	&lt;a href=&quot;/images/ral_board2.jpg&quot;&gt;&lt;img src=&quot;/images/ral_board2.jpg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;h4 id=&quot;ral-body-naked&quot;&gt;RAL body (naked)&lt;/h4&gt;

&lt;figure&gt;
	&lt;a href=&quot;/images/ral_body2.jpg&quot;&gt;&lt;img src=&quot;/images/ral_body2.jpg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;The body was cut, drilled, riveted, and painted in my shop in the garage. A good reminder of why I opted to not become a mechanical engineer. You might notice that the wheels are all directly chain driven by the motors with only a single gear reduction. I initially planned on having two gear boxes, one on either side, for RAL’s drivetrain but unfortunately I ran out of funding. RAL still drives decently, he just has a hard time making tight turns.&lt;/p&gt;

&lt;p&gt;I designed and assembled the microcontroller stamp module PCB specifically for this project. The Freescale microcontroller was selected because I hadn’t gotten the chance to use them on a project yet. However, in the future I’ll probably be going back to PICs and ATMELs.&lt;/p&gt;

&lt;h4 id=&quot;to---do&quot;&gt;To - Do&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Replace broken 433 MHz wireless module and swap out wired controlled for wireless one.&lt;/li&gt;
  &lt;li&gt;Buy hardware to mount the lawnmower base to the robot.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That’ll all probably come later in the Spring since I don’t really need RAL during the winter.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lior9999.com//RAL/&quot;&gt;RAL - Robotic Autonomous Lawnmower&lt;/a&gt; was originally published by Lior at &lt;a href=&quot;http://lior9999.com/&quot;&gt;Lior Ben-Yehoshua&lt;/a&gt; on November 28, 2013.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[3D Microfluidics Structures via Vacuum Deformation]]></title>
  <link rel="alternate" type="text/html" href="http://lior9999.com//3d-microfluidics-structures-via-vacuum-deformation/" />
  <id>http://lior9999.com//3d-microfluidics-structures-via-vacuum-deformation</id>
  <published>2013-09-11T03:28:36-04:00</published>
  <updated>2013-09-11T03:28:36-04:00</updated>
  <author>
    <name>Lior</name>
    <uri>http://lior9999.com/</uri>
    <email>admin@lior9999.com</email>
  </author>
  <content type="html">&lt;p&gt;Flexible and stretchable microsystem platforms have recently garnered significant attention due to their increasing variety of applications ranging from biomedical monitoring systems to soft robotic actuators. Of particular importance to BioMEMS and lab-on-chip applications are those which enable the incorporation of complex microfluidic networks. Many of these systems, however, are expensive to fabricate and remain limited by traditional MEMS fabrication procedures that are optimized for planar architectures. Some systems aim to overcome this latter issue by using positive pressure, which requires a controlled pressure source during device usage, while others resort to solvent-induced deformation.&lt;/p&gt;

&lt;p&gt;Here I present a novel technique for fabricating auto-deformable soft microfluidic platforms that exhibit out-of-plane deflections. The fabrication features rapid prototyping techniques that reduce production cost and time and enable straightforward customization. The structures are fabricated out of lasr-machined PDMS films via a layer-by-layer approach. Embedded microchannels allow fluid flow in the structures, while a logically-designed set of air pockets enables controlled three-dimensional structure deformation when placed in a vacuum. The vacuum-induced deformations are finally locked in place with a Parylene-C coat. Below is a schematic representation of the fabrication procedure of the structures.&lt;/p&gt;

&lt;figure&gt;
	&lt;a href=&quot;/images/vacuum_schematic.png&quot;&gt;&lt;img src=&quot;/images/vacuum_schematic.png&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;Fabrication procedure of the structures. (a) a thin (~500 μm) PDMS layer is cast; (b) it is laser-cut to define channels and deflection pockets, and subsequently bonded to a thicker (~800 μm) PDMS; (c) a thin (~100 μm) PDMS is bonded to the laser-cut layer, creating closed channels. (e) The structure is placed in vacuum to de-gas the air pockets, and (f) a thin layer of Parylene is then deposited. (g) The structure deflects upon removal from vacuum.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Below are some photographs of deflected, Parylene coated structures with and without liquid microchannels.&lt;/p&gt;

&lt;figure&gt;
	&lt;a href=&quot;/images/vacuum_channelcloseup.png&quot;&gt;&lt;img src=&quot;/images/vacuum_channelcloseup.png&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;Close up view of a fabricated deflectable structure showing the deflection-controlling pockets and a liquid-filled microchannel. Microscope inset shows laser-machined detail. Scale bar: 500 μm.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
	&lt;a href=&quot;/images/vacuum_deflectpic.png&quot;&gt;&lt;img src=&quot;/images/vacuum_deflectpic.png&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;Photographs of deflected, Parylene-coated structures (a) with and (b) without liquid microchannels.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Final curvature can be adjusted by differing laser-machined patterns, PDMS thickness, or by further adjusting the Parylene thickness to allow for a greater pressure gradient.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lior9999.com//3d-microfluidics-structures-via-vacuum-deformation/&quot;&gt;3D Microfluidics Structures via Vacuum Deformation&lt;/a&gt; was originally published by Lior at &lt;a href=&quot;http://lior9999.com/&quot;&gt;Lior Ben-Yehoshua&lt;/a&gt; on September 11, 2013.&lt;/p&gt;</content>
</entry>

</feed>
